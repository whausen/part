##############################################################################
# Buildout to install adhocracy
#
# requires:
#     - libjpeg, libpng dev
#     - libsqlite3 dev
#
##############################################################################

[buildout]
# workaround to make aggregating supervisor:programms work
# to use this buildout standalone you need to include base.cfg
#extends = base.cfg
eggs +=
    pysqlite
    WSGIRewrite
    repoze.xmliter
    PILwoTK == 1.1.6.4
    adhocracy
    BeautifulSoup
    fanstatic
    Paste
    PasteDeploy
    ipython
# checkout adhocracy packages to ./src
auto-checkout = *
# supervisor config to start adhocracy 
adhocracy_worker-supervisor = 
    40 adhocracy_worker (environment=${supervisor:environment} redirect_stderr=true stdout_logfile=var/log/adhocracy_worker.log stderr_logfile=NONE) ${buildout:bin-directory}/paster [--plugin=adhocracy worker -c ${buildout:directory}/etc/adhocracy.ini]
adhocracy-supervisor =
    45 adhocracy (environment=${supervisor:environment} redirect_stderr=true stdout_logfile=var/log/adhocracy.log stderr_logfile=NONE) ${buildout:bin-directory}/paster [serve ${buildout:directory}/etc/adhocracy.ini]
# parts in this buildout file to be installed
adhocracy-parts =
    paster
    adhocracy_conf
    test_conf
    adhocracy_setup
    adhocpy
parts +=
    ${buildout:adhocracy-parts}

##############################################################################
# System settings
##############################################################################

[domains]
main = adhocracy.lan

[ports]
main = 5001
supervisor = 5010

##############################################################################
# Adhocracy settings
##############################################################################

[adhocracy]
#start adhocracy in debug mode
debug = False
#TODO use geo features (You also need to include postgres_with_postgis instead of postgres)
geo = False
# theme adhocracy with diazo and merge a wordpress blog.
themed = False

protocol = http
host = 127.0.0.1
#Session secret, replace this with a randomly generated hash value or use "autogenerated" to let
#buildout do the job
secret = autogenerated
#Adhocracy email from:
email.from = mail@adhocracy.cc
#Error emails:
email.to =
smtp_server = localhost
smtp_port = 25
#Database connection
sqlalchemy.url = sqlite:///${buildout:directory}/var/development.db
#sqlalchemy.url = postgres://nutzer:passwort@localhost/20101128
#Site name for all instances, part of the html <title>, notification E-Mails etc
site.name = Adhocracy
language = de_DE
queue = adhocracy.queue
#Use /i/instance/... instead of http://instance.adhocracy.lan/..
relative_urls = False
# Running behind a proxy (Use X-Forwarded-For header to determine IP addresses)
behind_proxy = False
#custom adhocracy settings placed at the end of file (etc/adhocracy.ini)
#read etc/adhocracy.ini to learn all options
settings_override =
#    [logger_routes]
#    level = Debug

[twitter]
username =
key =
secret =
consumer_key =
consumer_secret =
#Full path to a twitter profile, e.g. http://twitter.com/liqd_de
profile_url =

##############################################################################
# Versions and code
##############################################################################

[adhocracy_code]
diazo_theme_rules_dir =

[sources]
# mr.developer repository checkouts to install dependency eggs

##############################################################################
# Setup adhocracy
##############################################################################

#install paster to set up adhocracy
[paster]
#recipe = zc.recipe.egg
recipe = minitage.recipe.scripts
eggs =
    ${buildout:eggs}
    Paste
    PasteScript
    PasteDeploy
entry-points = paster=paste.script.command:run
initialization =
    import paste.script.command
    paste.script.command.system_plugins.append('adhocracy')

# generate the adhocracy config file
[adhocracy_conf]
recipe = collective.recipe.genshi
input = ${buildout:directory}/etc/adhocracy.ini.in
output = ${buildout:directory}/etc/adhocracy.ini

# generate the adhocracy test config file
[test_conf]
recipe = collective.recipe.genshi
input = ${buildout:directory}/etc/test.ini.in
output = ${buildout:directory}/etc/test.ini 

#set up adhocracy
[adhocracy_setup]
recipe = plone.recipe.command
command =
    chmod -R g+rw var/data
    ln -s parts/omelette installed_eggs
#    echo "\n######################################################"
#    echo "\nMANUEL STEP to initialize the adhocracy database:\n"
#    echo "start supervisord to start your databaseserver: $ bin/supervisord\n"
#    echo "run setup-app: $ bin/paster setup-app ${buildout:directory}/etc/adhocracy.ini --name=content\n"
#    echo "restart supervisor: $ bin/supervisorct reload\n"
#    echo "check that every service is running: bin/supervisorctl status\n"
#    echo "note the supervisord config: parts/supervisor/supervisor.conf\n"
#    echo "######################################################"

# python with all required eggs
[adhocpy]
recipe = zc.recipe.egg
eggs =  ${buildout:eggs}
extra-paths = ./
interpreter = adhocpy
scripts = adhocpy

##############################################################################
# Set up supervisor to run it all
##############################################################################

[supervisor]
programs +=
    ${buildout:adhocracy_worker-supervisor}
    ${buildout:adhocracy-supervisor}
