#
# adhocracy - Pylons testing environment configuration
#
[DEFAULT]
debug = true
# Uncomment and replace with the address which should receive any error reports
#email_to = you@yourdomain.com
smtp_server = localhost
error_email_from = paste@localhost

[server:main]
use = egg:Paste#http
host = 127.0.0.1
port = 80

[app:main]
use = egg:adhocracy
full_stack = true
static_files = true
cache_dir = ${parts.buildout.directory}/var/testdata
adhocracy.site.dir = ${parts.buildout.directory}/var/testdata/site

#run functional integration tests
#run_integrationtests = true

#sqlalchemy.url = sqlite:///:memory:
sqlalchemy.url = sqlite:///${parts.buildout.directory}/var/testdata/test.db

# Add additional test specific configuration options as necessary.
adhocracy.setup.drop = KILL_EM_ALL
adhocracy.site.dir = ${parts.buildout.directory}/var/testdata/test-site
adhocracy.domain = test.lan

skip_migration = True
skip_authentication = True
skip_setupentities = True

# Redis is used to build a task queue that will be processed by the
# `worker` process.
# Note: host has to be an IP address, not a hostname
adhocracy.redis.host = ${parts.domains.redis}
adhocracy.redis.port = ${parts.ports.redis}
adhocracy.redis.queue = ${parts.adhocracy.queue}

# memcached 
memcached.server = 127.0.0.1:${parts.ports.memcached}

#sorl
adhocracy.solr.url = http://${parts.solr.host}:${parts.solr.port}/solr

# beaker
beaker.session.key = adhocracy_state
beaker.session.secret = autogenerated
beaker.session.cookie_domain = test.lan
session.domain = test.lan 
beaker.cache.data_dir = ${parts.buildout.directory}/var/testdata/cache
beaker.session.data_dir = ${parts.buildout.directory}/var/testdata/sessions
